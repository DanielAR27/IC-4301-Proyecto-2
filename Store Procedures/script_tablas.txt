CREATE TABLE Roles (
    RolID INT PRIMARY KEY IDENTITY,      -- Identificador único del rol
    Descripcion NVARCHAR(50) UNIQUE NOT NULL -- Nombre del rol, ej. 'Cliente', 'Admin', 'Vendedor'
);

CREATE TABLE UsuariosRoles (
    UsuarioRolID INT PRIMARY KEY IDENTITY,         -- Identificador único de la relación
    UsuarioID INT FOREIGN KEY REFERENCES Usuarios(UsuarioID) ON DELETE CASCADE, -- Usuario asociado
    RolID INT FOREIGN KEY REFERENCES Roles(RolID) ON DELETE CASCADE -- Rol asociado
);

------------------------------------------------

CREATE TABLE Usuarios (
    UsuarioID INT PRIMARY KEY IDENTITY (1, 1),       
    Nombre NVARCHAR(100) NOT NULL,             
    Apellido NVARCHAR(100) NOT NULL,           
    Email NVARCHAR(100) UNIQUE NOT NULL,
    Password NVARCHAR(255) NOT NULL,        
    Telefono NVARCHAR(15),
    FechaNacimiento DATE,                    
    FechaRegistro DATE DEFAULT GETDATE(),      
);

CREATE TABLE CarritoCompras (
    CarritoID INT PRIMARY KEY IDENTITY,                     -- Identificador único del carrito
    UsuarioID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Usuarios(UsuarioID) ON DELETE CASCADE, -- Usuario único con carrito activo
    TotalCarrito DECIMAL(10, 2) NOT NULL DEFAULT 0 CHECK (TotalCarrito >= 0) -- Total inicializado en cero, no puede ser negativo
);

CREATE TABLE Paises (
    PaisID INT PRIMARY KEY IDENTITY (1,1),
	Codigo NVARCHAR(3) UNIQUE, -- Identificador único del país
    Nombre NVARCHAR(100) NOT NULL, -- Nombre del país, hasta 100 caracteres
    CostoEnvio DECIMAL(10, 2) NOT NULL DEFAULT 0 CHECK (CostoEnvio >= 0) -- Total inicializado en cero, no puede ser negativo
);

CREATE TABLE Estados_Provincias (
    EstadoProvinciaID INT PRIMARY KEY IDENTITY (1,1),        -- Identificador único del estado/provincia
    PaisID INT FOREIGN KEY REFERENCES Paises(PaisID) ON DELETE CASCADE, -- FK a Paises, elimina en cascada
    Nombre NVARCHAR(100) NOT NULL                     -- Nombre del estado o provincia, hasta 100 caracteres
);

CREATE TABLE Direcciones (
    DireccionID INT PRIMARY KEY IDENTITY (1,1),                 -- Identificador único de la dirección
    UsuarioID INT FOREIGN KEY REFERENCES Usuarios(UsuarioID) ON DELETE CASCADE, -- FK a Usuarios
    PaisID INT FOREIGN KEY REFERENCES Paises(PaisID),     -- FK a Países
    EstadoProvinciaID INT FOREIGN KEY REFERENCES Estados_Provincias(EstadoProvinciaID), -- FK a Estados_Provincias
    DireccionLinea1 NVARCHAR(255) NOT NULL,               -- Primera línea de dirección (calle, número)
    DireccionLinea2 NVARCHAR(255),                        -- Segunda línea de dirección (opcional)
    Ciudad NVARCHAR(100) NOT NULL,                        -- Ciudad
    CodigoPostal NVARCHAR(20) NOT NULL,                   -- Código postal
    Contacto NVARCHAR(15) NOT NULL                        -- Número de contacto (teléfono)
);

CREATE TABLE MetodoPago (
    MetodoPagoID INT PRIMARY KEY IDENTITY(1,1),     -- Identificador único del método de pago
    UsuarioID INT FOREIGN KEY REFERENCES Usuarios(UsuarioID) ON DELETE CASCADE,                        -- FK que referencia al usuario
    TipoMetodo NVARCHAR(50) NOT NULL,              -- Tipo de método (ej: 'Tarjeta de crédito', 'PayPal', 'Transferencia bancaria')
    NumeroTarjeta NVARCHAR(16),                    -- Número de la tarjeta (enmascarado o solo los últimos 4 dígitos)
    NombreTitular NVARCHAR(100),                   -- Nombre del titular de la tarjeta
    FechaExpiracion DATE,                          -- Fecha de expiración (para tarjetas)
    CodigoSeguridad NVARCHAR(4),                   -- Código de seguridad (almacenado de manera segura/encriptada)
    BancoEmisor NVARCHAR(50),                      -- Banco emisor (opcional)
    FechaRegistro DATETIME DEFAULT GETDATE(),      -- Fecha en la que se registró el método de pago
    Activo BIT DEFAULT 1,                          -- Indica si el método de pago está activo (1) o no (0)
);

CREATE TABLE Marcas (
    MarcaID INT PRIMARY KEY IDENTITY (1,1),             -- Identificador único de la marca
    Nombre NVARCHAR(100) NOT NULL UNIQUE          -- Nombre de la marca, con restricción de unicidad
);

CREATE TABLE Categorias (
    CategoriaID INT PRIMARY KEY IDENTITY (1,1),         -- Identificador único de la categoría
    Nombre NVARCHAR(100) NOT NULL UNIQUE          -- Nombre de la categoría, con restricción de unicidad
);

CREATE TABLE Productos (
    ProductoID INT PRIMARY KEY IDENTITY (1,1),          
    Nombre NVARCHAR(100) NOT NULL,                
    Descripcion NVARCHAR(500),                    
    Precio DECIMAL(10, 2) NOT NULL,               
    Stock DECIMAL(10, 2) NOT NULL CHECK (Stock >= 0), 
    CategoriaID INT FOREIGN KEY REFERENCES Categorias(CategoriaID),
    MarcaID INT FOREIGN KEY REFERENCES Marcas(MarcaID),
    CalificacionPromedio DECIMAL(3, 2) DEFAULT 0.0 CHECK (CalificacionPromedio BETWEEN 0 AND 5), -- Rango de 0.00 a 5.00
    FechaAgregado DATE DEFAULT GETDATE(),         
    Imagen NVARCHAR(255)
);

CREATE TABLE CarritoProducto (
    CarritoProductoID INT PRIMARY KEY IDENTITY (1,1),
    CarritoID INT FOREIGN KEY REFERENCES CarritoCompras(CarritoID) ON DELETE CASCADE, 
    ProductoID INT FOREIGN KEY REFERENCES Productos(ProductoID),
    ProductoNombre NVARCHAR(100) NOT NULL,                          -- Nombre del producto en el momento de agregarlo
    Linea INT NOT NULL,                                             -- Orden del producto en el carrito    
    Cantidad DECIMAL(10, 2) NOT NULL CHECK (Cantidad > 0),          -- Cantidad del producto, no negativa
    PrecioOriginal DECIMAL(10, 2) NOT NULL,                         -- Precio sin descuento
    LineaTotal DECIMAL(10, 2) NOT NULL,                             -- Cantidad * PrecioOriginal	
);

CREATE TABLE Descuentos (
    DescuentoID INT PRIMARY KEY IDENTITY (1,1),
    ProductoID INT FOREIGN KEY REFERENCES Productos(ProductoID) ON DELETE CASCADE,
    Porcentaje DECIMAL(5, 2) CHECK (Porcentaje BETWEEN 0 AND 100), 
    FechaInicio DATETIME NOT NULL,
    FechaFin DATETIME NOT NULL,
    CONSTRAINT CK_FechaFin CHECK (FechaFin > FechaInicio),
    CONSTRAINT UQ_Producto_Fecha UNIQUE (ProductoID, FechaInicio, FechaFin)
);

CREATE TABLE Facturas (
    FacturaID INT PRIMARY KEY IDENTITY (1,1),                   -- Identificador único de la factura
    UsuarioID INT NOT NULL FOREIGN KEY REFERENCES Usuarios(UsuarioID), -- Relación con el usuario
    FechaFactura DATE DEFAULT GETDATE(),                  -- Fecha de la factura (fecha de compra)
    Total DECIMAL(10, 2) NOT NULL CHECK (Total >= 0),     -- Monto total con IVA, descuentos aplicados y costo de envío
    VatTotal DECIMAL(10, 2) NOT NULL CHECK (VatTotal >= 0) -- IVA total aplicado a la factura	
);

CREATE TABLE LineasFactura (
    LineaFacturaID INT PRIMARY KEY IDENTITY (1,1),                         -- Identificador único de la línea de factura
    FacturaID INT NOT NULL FOREIGN KEY REFERENCES Facturas(FacturaID) ON DELETE CASCADE, -- Relación con Factura
    ProductoID INT NOT NULL FOREIGN KEY REFERENCES Productos(ProductoID), -- Identificador del producto comprado
    ProductoNombre NVARCHAR(100) NOT NULL,                         -- Nombre del producto al momento de la compra
    Linea INT NOT NULL,                                            -- Orden de la línea en la factura
    Cantidad DECIMAL(10, 2) NOT NULL CHECK (Cantidad > 0),         -- Cantidad de producto comprado
    PrecioOriginal DECIMAL(10, 2) NOT NULL CHECK (PrecioOriginal >= 0), -- Precio del producto sin descuento
    DescuentoAplicado DECIMAL(5, 2) DEFAULT 0 CHECK (DescuentoAplicado BETWEEN 0 AND 100), -- % de descuento
    LineaTotal DECIMAL(10, 2) NOT NULL CHECK (LineaTotal >= 0)     -- Total de la línea con descuento aplicado
);

CREATE TABLE Reviews (
    ReviewID INT PRIMARY KEY IDENTITY (1,1),                    -- Identificador único de la reseña
    UsuarioID INT NOT NULL FOREIGN KEY REFERENCES Usuarios(UsuarioID) ON DELETE CASCADE, -- Usuario que hizo la reseña
    ProductoID INT NOT NULL FOREIGN KEY REFERENCES Productos(ProductoID) ON DELETE CASCADE, -- Producto que se está reseñando
    Calificacion INT NOT NULL CHECK (Calificacion BETWEEN 1 AND 5), -- Calificación del 1 al 5
    Comentario NVARCHAR(1000),                            -- Comentario opcional de la reseña
    FechaReview DATETIME NOT NULL DEFAULT GETDATE()       -- Fecha en que se realizó la reseña
);









