package proyecto.comercioapp;

import java.awt.Color;
import java.net.URL;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import proyecto.db.DBMediator;


public class ProductoCarrito extends javax.swing.JDialog {
    private int usuarioID;
    private int productoID;
    private String productoNombre;
    private String productoDescripcion;
    private Float precio;
    private Float stock;
    private String categoria;
    private String marca;
    private Float calificacionPromedio;
    private String img;
    private int reviews;
    private Float descuento;
    private int productosContador;
    private String descuentoURL = "https://i.ibb.co/4tMXLwq/descuento-img.png";
    private Boolean productoCambiado = false;
    private HomeView parent;
    
    public ProductoCarrito(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
 
     public ProductoCarrito(HomeView parent, boolean modal, int usuarioID, int productoID) {
        super(parent, modal);
        this.parent = parent;
        this.usuarioID = usuarioID;
        this.productoID = productoID;
        initComponents();
        actualizarLabels(productoCambiado);
        this.setTitle("Producto #" + productoID);
        this.setLayout(null);

    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        extraLabel = new javax.swing.JLabel();
        infoGeneralLabel = new javax.swing.JLabel();
        lessButton = new javax.swing.JButton();
        cantidadTextLabel = new javax.swing.JLabel();
        moreButton = new javax.swing.JButton();
        cantidadLabel = new javax.swing.JLabel();
        iconLabel = new javax.swing.JLabel();
        addToCarButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        modifyButton = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                productoCarritoClosedAction(evt);
            }
        });

        extraLabel.setText("INFO EXTRA");

        infoGeneralLabel.setText("INFO GENERAL");

        lessButton.setText("-");
        lessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lessButtonActionPerformed(evt);
            }
        });

        cantidadTextLabel.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        cantidadTextLabel.setText("Seleccione la cantidad:");

        moreButton.setText("+");
        moreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moreButtonActionPerformed(evt);
            }
        });

        cantidadLabel.setText("1");

        iconLabel.setText(null);
        iconLabel.setLayout(null); // Usar un layout absoluto para permitir la posici√≥n manual de los componentes

        addToCarButton.setText("Agregar al Carrito");
        addToCarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCarButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Eliminar Producto");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        modifyButton.setText("Modificar Producto");
        modifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(iconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(infoGeneralLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lessButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cantidadLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(moreButton))
                    .addComponent(cantidadTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(extraLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addToCarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(modifyButton)))
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(infoGeneralLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cantidadTextLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lessButton)
                            .addComponent(cantidadLabel)
                            .addComponent(moreButton)))
                    .addComponent(iconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(extraLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 17, Short.MAX_VALUE)
                        .addComponent(modifyButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addToCarButton)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void moreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moreButtonActionPerformed
        if (productosContador < 99){
            productosContador += 1;
            cantidadLabel.setText(Integer.toString(productosContador));
        }
    }//GEN-LAST:event_moreButtonActionPerformed

    private void lessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lessButtonActionPerformed
       if(productosContador > 1){
           productosContador -= 1;
           cantidadLabel.setText(Integer.toString(productosContador));
       }
    }//GEN-LAST:event_lessButtonActionPerformed

    private void addToCarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCarButtonActionPerformed
        int res = DBMediator.UpsertCarritoProducto(usuarioID, productoID, productoNombre, productosContador, precio);
        switch (res) {
            case 0 -> {
                JOptionPane.showMessageDialog(this, "Se ha actualizado el carrito con " + productosContador + " existencias del producto.", "Notificaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            }
            case 1 -> {
                JOptionPane.showMessageDialog(this, "Se ha agregado " + productosContador + " existencias del producto al carrito exitosamente.",
                        "Notificaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            }case -1 ->{
                JOptionPane.showMessageDialog(this, "Ha ocurrido un error, intente de nuevo porfavor.", "Advertencia", JOptionPane.ERROR_MESSAGE);
                return;                
            }default ->{
                JOptionPane.showMessageDialog(this, "La cantidad solicitada supera el stock disponible, intente de nuevo porfavor.", "Advertencia", JOptionPane.ERROR_MESSAGE);
                return;                     
            }
        }
    }//GEN-LAST:event_addToCarButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
            int respuesta = JOptionPane.showConfirmDialog(
                this,
                "¬øEst√° seguro de eliminar el producto \"" + productoNombre + "\"?\nEsta acci√≥n es irreversible.",
                "Confirmar eliminaci√≥n",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE
            );

            if (respuesta == JOptionPane.YES_OPTION) {
                int resultado = DBMediator.eliminarProducto(productoID);
                switch (resultado) {
                    case 0 ->{
                        JOptionPane.showMessageDialog(this, "Producto eliminado con √©xito.", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
                        productoCambiado = true;
                        this.dispose();
                    }case -1 ->{
                        JOptionPane.showMessageDialog(this, "El producto est√° asociado a una factura, intente con otro.", "Error", JOptionPane.ERROR_MESSAGE);
                    }default ->{
                        JOptionPane.showMessageDialog(this, "Error al eliminar el producto.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
           }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void modifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyButtonActionPerformed
        AddProducto ap = new AddProducto(this, true, productoID);
        ap.setVisible(true);
    }//GEN-LAST:event_modifyButtonActionPerformed

    private void productoCarritoClosedAction(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_productoCarritoClosedAction
        if (productoCambiado){
            JOptionPane.showMessageDialog(this, "Se ha detectado cambios en un producto, se reiniciar√° la pantalla de home.",
                    "Notificaci√≥n", JOptionPane.INFORMATION_MESSAGE);            
            parent.resetearPagina();
            parent.actualizarBotones(0);
        }
    }//GEN-LAST:event_productoCarritoClosedAction

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductoCarrito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductoCarrito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductoCarrito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductoCarrito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ProductoCarrito dialog = new ProductoCarrito(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private void llenarAtributos(List<Object> productoInfo){
        productosContador = 1;
        productoNombre = (String) productoInfo.get(0);
        productoDescripcion = (String) productoInfo.get(1);
        precio = (Float) productoInfo.get(2);
        stock = (Float) productoInfo.get(3);
        categoria = (String) productoInfo.get(4);
        marca = (String) productoInfo.get(5);
        calificacionPromedio = (Float) productoInfo.get(6);
        img = (String) productoInfo.get(7);
        reviews = (Integer) productoInfo.get(8);
        descuento = (Float) productoInfo.get(9);
    }
    
    public final void actualizarLabels(boolean productoCambiado) {        
        llenarAtributos(DBMediator.getProductoInfo(productoID));            
        // Una flag para ver si el producto cambi√≥.
        this.productoCambiado = productoCambiado;
        String rol = DBMediator.getRolPorUsuarioID(usuarioID);

        if (rol.equals("Cliente")){
           modifyButton.setVisible(false);
           deleteButton.setVisible(false);
        }else{
            modifyButton.setBounds(addToCarButton.getX(), modifyButton.getY(), modifyButton.getWidth(), modifyButton.getHeight());
            deleteButton.setBounds(addToCarButton.getX(), deleteButton.getY(), deleteButton.getWidth(), deleteButton.getHeight());        
        }  

        if (stock <= 2 && rol.equals("Administrador")){
            JOptionPane.showMessageDialog(this, "El stock de este producto se encuentra bajo.",
                    "Advertencia", JOptionPane.WARNING_MESSAGE);                 
        }
        
        configurarImagenProducto();
        
        String contenidoExtra = "<html>"
                + "<b>Descripci√≥n:</b> " + productoDescripcion + "<br>"
                + "<b>Marca:</b> " + marca + "<br>"
                + "<b>Categor√≠a:</b> " + categoria  + "<br>"
                + "<b>Stock: </b>" + stock
                + "</html>";

        String contenidoInfo = "<html>"
                + "<b>Nombre:</b> " + productoNombre + "<br>"
                + "<b>Precio Unitario:</b> ¬£" + precio + "<br>";

        if (descuento > 0){
            float dineroAhorrado = descuento/100 * precio;
            contenidoInfo += "<b>Descuento Aplicado:</b> ¬£ -" + dineroAhorrado + "<br>";
            contenidoInfo += "<b>Precio Final:</b> ¬£ " + (precio - dineroAhorrado) + "<br>";
        }else{
            contenidoInfo += "<b>Precio Final:</b> ¬£ " + (precio) + "<br>";
        }


        if (reviews > 0) {
            contenidoInfo += "<b>Calificaci√≥n Promedio:</b> " + calificacionPromedio + " ‚ú©<br>";
        }
        contenidoInfo += "</html>";  // Cerrar la etiqueta HTML solo al final

        extraLabel.setText(contenidoExtra);
        infoGeneralLabel.setText(contenidoInfo);
    }

private void configurarImagenProducto() {
    iconLabel.setText(null);
    iconLabel.setLayout(null); // Usar un dise√±o absoluto para posicionar componentes manualmente

    try {
        // Comprobar si imgUrl no es null ni vac√≠o
        if (img != null && !img.trim().isEmpty()) {
            // Crear un ImageIcon a partir de la URL
            URL imageUrl = new URL(img);
            ImageIcon imageIcon = new ImageIcon(imageUrl);

            // Asignar la imagen al JLabel
            iconLabel.setIcon(imageIcon);

            // Alinear la imagen al centro
            iconLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            iconLabel.setVerticalAlignment(javax.swing.SwingConstants.CENTER);
            iconLabel.setBorder(BorderFactory.createLineBorder(Color.BLACK, 4)); // Borde negro

            // Si hay descuento, agregar el √≠cono del descuento
            if (descuento != 0) {
                JLabel descuentoLabel = new JLabel();
                URL descuentoImageUrl = new URL(descuentoURL); // URL de la imagen de descuento
                ImageIcon descuentoIcon = new ImageIcon(descuentoImageUrl);

                descuentoLabel.setIcon(descuentoIcon);

                // Configurar tama√±o del iconLabel si no lo tiene
                int iconLabelWidth = 150; // Ajustar tama√±o
                int iconLabelHeight = 150;
                iconLabel.setSize(iconLabelWidth, iconLabelHeight);

                // Posicionar el label de descuento en la esquina superior derecha
                descuentoLabel.setBounds(iconLabelWidth - descuentoIcon.getIconWidth() - 5, 5, 
                                         descuentoIcon.getIconWidth(), descuentoIcon.getIconHeight());

                // A√±adir el label de descuento al iconLabel
                iconLabel.add(descuentoLabel);
                descuentoLabel.setVisible(true);
            }
        } else {
            // Si no se carg√≥ la imagen, usar la imagen de fallback
            URL fallbackUrl = new URL("https://i.ibb.co/VM6PNKG/missigno.png");
            ImageIcon fallbackIcon = new ImageIcon(fallbackUrl);
            iconLabel.setIcon(fallbackIcon);
            iconLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            iconLabel.setVerticalAlignment(javax.swing.SwingConstants.CENTER);
            iconLabel.setBorder(BorderFactory.createLineBorder(Color.BLACK, 2)); // Borde negro
        }
    } catch (Exception e) {
        try {
            // Si ocurre un error, usar la imagen de fallback
            URL fallbackUrl = new URL("https://i.ibb.co/VM6PNKG/missigno.png");
            ImageIcon fallbackIcon = new ImageIcon(fallbackUrl);
            iconLabel.setIcon(fallbackIcon);
            iconLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            iconLabel.setVerticalAlignment(javax.swing.SwingConstants.CENTER);
            iconLabel.setBorder(BorderFactory.createLineBorder(Color.BLACK, 2)); // Borde negro
        } catch (Exception fallbackException) {
            fallbackException.printStackTrace();
            // Si incluso el fallback falla, muestra un texto de error
            iconLabel.setIcon(null);
            iconLabel.setText("Error al cargar imagen");
            iconLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            iconLabel.setVerticalAlignment(javax.swing.SwingConstants.CENTER);
            iconLabel.setBorder(BorderFactory.createLineBorder(Color.RED, 2)); // Borde rojo para errores graves
        }
    }
}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToCarButton;
    private javax.swing.JLabel cantidadLabel;
    private javax.swing.JLabel cantidadTextLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel extraLabel;
    private javax.swing.JLabel iconLabel;
    private javax.swing.JLabel infoGeneralLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton lessButton;
    private javax.swing.JButton modifyButton;
    private javax.swing.JButton moreButton;
    // End of variables declaration//GEN-END:variables
}
