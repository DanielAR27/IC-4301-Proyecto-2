package proyecto.comercioapp;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import proyecto.db.DBMediator;
import proyecto.utils.CheckUtils;

public class PayMethodMenu extends javax.swing.JFrame {
    private int cantidadMetodosPago;
    private int usuarioID;
    
    public PayMethodMenu() {
        initComponents();
    }

     public PayMethodMenu(int usuarioID){
        this.usuarioID = usuarioID;
        initComponents();
        cargarMetodosPago();
     }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PayPanel = new javax.swing.JPanel();
        addPayMethodButton = new javax.swing.JButton();
        metodosPagoLabel = new javax.swing.JLabel();
        returnButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Métodos de Pago");
        setResizable(false);

        PayPanel.setBackground(new java.awt.Color(153, 204, 255));

        addPayMethodButton.setText("Agregar Método de Pago");
        addPayMethodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPayMethodButtonActionPerformed(evt);
            }
        });

        metodosPagoLabel.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        metodosPagoLabel.setForeground(new java.awt.Color(0, 0, 0));
        metodosPagoLabel.setText("Métodos de Pago");

        returnButton.setText("Regresar");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PayPanelLayout = new javax.swing.GroupLayout(PayPanel);
        PayPanel.setLayout(PayPanelLayout);
        PayPanelLayout.setHorizontalGroup(
            PayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PayPanelLayout.createSequentialGroup()
                .addContainerGap(192, Short.MAX_VALUE)
                .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addPayMethodButton)
                .addGap(190, 190, 190))
            .addGroup(PayPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(metodosPagoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(489, Short.MAX_VALUE))
        );
        PayPanelLayout.setVerticalGroup(
            PayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PayPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(metodosPagoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 383, Short.MAX_VALUE)
                .addGroup(PayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPayMethodButton)
                    .addComponent(returnButton))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addPayMethodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPayMethodButtonActionPerformed
        if (cantidadMetodosPago >= 2){
            JOptionPane.showMessageDialog(this, "No puede tener más de 2 métodos de pago, intente borrando uno.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return; // Detener la ejecución si no se retorna contraseña        
        }else{      
            this.dispose();
            AddPayMethodMenu addPay = new AddPayMethodMenu(usuarioID, null);
            addPay.setVisible(true);
        }
    }//GEN-LAST:event_addPayMethodButtonActionPerformed

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        this.dispose();
        HomeView home = new HomeView(usuarioID);
        home.setVisible(true);
    }//GEN-LAST:event_returnButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PayMethodMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PayMethodMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PayMethodMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PayMethodMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PayMethodMenu().setVisible(true);
            }
        });
    }
    
private void cargarMetodosPago() {
    List<List<Object>> metodosPago = DBMediator.getMetodosPagoPorUsuario(usuarioID);    
    // Se eliminan todos los elementos del panel.
    PayPanel.removeAll();
    // Se agregan los labels principales nuevamente.
    PayPanel.add(metodosPagoLabel);
    PayPanel.add(returnButton);
    PayPanel.add(addPayMethodButton);
    
    // Verificar si hay direcciones
    if (metodosPago.isEmpty()) {
        cantidadMetodosPago = 0;
        JLabel noMetodosPagoLabel = new JLabel("No hay métodos de pago disponibles de momento.");
        noMetodosPagoLabel.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 16));
        noMetodosPagoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        noMetodosPagoLabel.setBounds((PayPanel.getWidth() - 450) / 2, metodosPagoLabel.getHeight() + 70, 450, 60); // Ajustar el tamaño y posición
        PayPanel.add(noMetodosPagoLabel);
    } else {
        cantidadMetodosPago = metodosPago.size();
        // Crear paneles para cada dirección
        int yOffset = metodosPagoLabel.getHeight() + 20; // Espaciado vertical justo debajo del título
        for (int i = 0; i < metodosPago.size(); i++) {
            List<Object> metodoPago = metodosPago.get(i);
            JPanel metPanel = crearPanelMetodoPago(i + 1, metodoPago);

            // Centrar el panel dentro del `PayPanel`
            metPanel.setBounds((PayPanel.getWidth() - 315) / 2, yOffset, 315, 156);
            PayPanel.add(metPanel);
            yOffset += 166; // Actualizar el desplazamiento vertical
        }
    }

    // Refrescar el panel principal
    PayPanel.revalidate();
    PayPanel.repaint();
}


private JPanel crearPanelMetodoPago(int numMetodoPago, List<Object> metodoPago) {
    JPanel panel = new JPanel();
    Integer metodoPagoID = (Integer) metodoPago.get(0);
    panel.setLayout(new BorderLayout());
    panel.setBackground(new java.awt.Color(200, 230, 255));
    panel.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

    // Título
    JLabel titulo = new JLabel("Método de Pago #" + numMetodoPago + ":");
    titulo.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 14));
    panel.add(titulo, BorderLayout.NORTH);

    // Obtener el número de tarjeta desencriptado pero ocultar los primeros números excepto los últimos 4.
    String maskedCardNumber = CheckUtils.maskCardNumber(
            CheckUtils.decrpytCardNumber((String) metodoPago.get(1), (String) metodoPago.get(2)));

    // Información del método de pago
    String contenidoMetodoPago = String.format(
            "<b>Tarjeta:</b> %s<br><b>Titular:</b> %s<br><b>Expiración:</b> %s<br><b>CVV:</b> %s",
            maskedCardNumber,
            metodoPago.get(3), // Nombre del Titular
            metodoPago.get(4), // Fecha de Expiración
            metodoPago.get(5)  // CVV
    );

    JLabel contenidoLabel = new JLabel("<html>" + contenidoMetodoPago + "</html>");
    panel.add(contenidoLabel, BorderLayout.CENTER);

    // Botones
    JPanel botonesPanel = new JPanel();
    botonesPanel.setLayout(new FlowLayout(FlowLayout.RIGHT));

    JButton modificarButton = new JButton("Modificar");
    JButton eliminarButton = new JButton("Eliminar");

    modificarButton.addActionListener(e -> {
        this.dispose();
        AddPayMethodMenu addMethod = new AddPayMethodMenu(usuarioID, metodoPagoID);
        addMethod.setVisible(true);
    });
    eliminarButton.addActionListener(e -> {
            int respuesta = JOptionPane.showConfirmDialog(this, 
                "¿Está seguro de eliminar este método de pago? Los cambios serán permanentes.", 
                "Advertencia", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.WARNING_MESSAGE
        );

        if (respuesta == JOptionPane.YES_OPTION) {
            int res = DBMediator.deleteMetodoPago(metodoPagoID);
            switch(res){
                case 0->{
                    JOptionPane.showMessageDialog(this,
                            "Se ha eliminado exitosamente el método de pago.",
                            "Notificación",
                            JOptionPane.INFORMATION_MESSAGE);
                    cargarMetodosPago();
                    return;
                }default ->{
                    JOptionPane.showMessageDialog(this,
                            "No se ha podido eliminar el método de pago, intente de nuevo más tarde.",
                            "Notificación",
                            JOptionPane.WARNING_MESSAGE);
                    return;
                }                    
            }
        }
    });

    botonesPanel.add(modificarButton);
    botonesPanel.add(eliminarButton);

    panel.add(botonesPanel, BorderLayout.SOUTH);

    return panel;
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PayPanel;
    private javax.swing.JButton addPayMethodButton;
    private javax.swing.JLabel metodosPagoLabel;
    private javax.swing.JButton returnButton;
    // End of variables declaration//GEN-END:variables
}
