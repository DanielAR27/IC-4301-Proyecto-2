package proyecto.comercioapp;

import java.awt.Color;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import proyecto.db.DBMediator;

public class ProductoReview extends javax.swing.JDialog {

    private int usuarioID;
    private int productoID;
    private int calificacion;
    private ImageIcon fullStar;
    private ImageIcon emptyStar;
    private String productoNombre;
    private String productoDescripcion;
    private Float precio;
    private Float stock;
    private String categoria;
    private String marca;
    private Float calificacionPromedio;
    private String img;
    private int reviews;
    
    public ProductoReview(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public ProductoReview(java.awt.Frame parent, boolean modal, int usuarioID, int productoID) {
        super(parent, modal);
        try{
            this.fullStar = new ImageIcon(new URL("https://i.ibb.co/LSgtNDz/full-star.png"));
            this.emptyStar = new ImageIcon(new URL("https://i.ibb.co/6XpbKbr/empty-star.png"));
        }catch (MalformedURLException mue){
                JOptionPane.showMessageDialog(this, "Ha ocurrido un error al intentar cargar un paquete de imagenes, intente de nuevo más tarde.",
                        "Advertencia", JOptionPane.ERROR_MESSAGE);
                this.dispose();                  
        }
        llenarAtributos(DBMediator.getProductoInfo(productoID));
        initComponents();
        this.setLayout(null);
        inicializarReviews();        
        actualizarLabels();
        this.calificacion = 0;
        this.setTitle("Reseña (Producto #" + productoID+ ")");
        this.usuarioID = usuarioID;
        this.productoID = productoID;
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        infoLabel1 = new javax.swing.JLabel();
        infoLabel2 = new javax.swing.JLabel();
        twoStarsButton = new javax.swing.JButton();
        iconLabel = new javax.swing.JLabel();
        confirmButton = new javax.swing.JButton();
        comentarioLabel = new javax.swing.JLabel();
        comentarioScrollPane = new javax.swing.JScrollPane();
        comentarioTextArea = new javax.swing.JTextArea();
        oneStarButton = new javax.swing.JButton();
        threeStarsButton = new javax.swing.JButton();
        fourStarsButton = new javax.swing.JButton();
        fiveStarsButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        infoLabel1.setText("INFO GENERAL");

        infoLabel2.setText("INFO GENERAL");

        try{
            twoStarsButton.setIcon(emptyStar);

            // Configurar la posición del texto y el ícono
            twoStarsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            twoStarsButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

            // Hacer el fondo transparente y quitar el borde
            twoStarsButton.setContentAreaFilled(false); // Hace que el fondo sea transparente
            twoStarsButton.setBorderPainted(false); // Quita el borde
            twoStarsButton.setFocusPainted(false); // Quita el borde de enfoque al hacer clic
        }catch(Exception e){
            twoStarsButton.setText("No se ha encontrado la imagen.");
        }
        twoStarsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoStarsButtonActionPerformed(evt);
            }
        });

        iconLabel.setText(null);
        iconLabel.setLayout(null); // Usar un layout absoluto para permitir la posición manual de los componentes

        try {
            // Convertir la URL del String a un objeto URL
            URL imageUrl = new URL(img);

            // Crear un ImageIcon a partir de la URL
            ImageIcon imageIcon = new ImageIcon(imageUrl);

            // Asignar la imagen al JLabel
            iconLabel.setIcon(imageIcon);

            // Alinear la imagen al centro
            iconLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            iconLabel.setVerticalAlignment(javax.swing.SwingConstants.CENTER);
            iconLabel.setBorder(BorderFactory.createLineBorder(Color.BLACK, 4)); // Borde negro de 4 píxeles de grosor
        } catch (Exception e) {
            e.printStackTrace();
        }

        confirmButton.setText("Confirmar Reseña");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        comentarioLabel.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        comentarioLabel.setText("Inserte un Comentario:");

        comentarioTextArea.setColumns(20);
        comentarioTextArea.setRows(5);
        comentarioScrollPane.setViewportView(comentarioTextArea);

        try{
            oneStarButton.setIcon(emptyStar);

            // Configurar la posición del texto y el ícono
            oneStarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            oneStarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

            // Hacer el fondo transparente y quitar el borde
            oneStarButton.setContentAreaFilled(false); // Hace que el fondo sea transparente
            oneStarButton.setBorderPainted(false); // Quita el borde
            oneStarButton.setFocusPainted(false); // Quita el borde de enfoque al hacer clic
        }catch(Exception e){
            oneStarButton.setText("No se ha encontrado la imagen.");
        }
        oneStarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneStarButtonActionPerformed(evt);
            }
        });

        try{
            threeStarsButton.setIcon(emptyStar);

            // Configurar la posición del texto y el ícono
            threeStarsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            threeStarsButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

            // Hacer el fondo transparente y quitar el borde
            threeStarsButton.setContentAreaFilled(false); // Hace que el fondo sea transparente
            threeStarsButton.setBorderPainted(false); // Quita el borde
            threeStarsButton.setFocusPainted(false); // Quita el borde de enfoque al hacer clic
        }catch(Exception e){
            threeStarsButton.setText("No se ha encontrado la imagen.");
        }
        threeStarsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeStarsButtonActionPerformed(evt);
            }
        });

        try{
            fourStarsButton.setIcon(emptyStar);

            // Configurar la posición del texto y el ícono
            fourStarsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            fourStarsButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

            // Hacer el fondo transparente y quitar el borde
            fourStarsButton.setContentAreaFilled(false); // Hace que el fondo sea transparente
            fourStarsButton.setBorderPainted(false); // Quita el borde
            fourStarsButton.setFocusPainted(false); // Quita el borde de enfoque al hacer clic
        }catch(Exception e){
            fourStarsButton.setText("No se ha encontrado la imagen.");
        }
        fourStarsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourStarsButtonActionPerformed(evt);
            }
        });

        try{
            fiveStarsButton.setIcon(emptyStar);

            // Configurar la posición del texto y el ícono
            fiveStarsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            fiveStarsButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

            // Hacer el fondo transparente y quitar el borde
            fiveStarsButton.setContentAreaFilled(false); // Hace que el fondo sea transparente
            fiveStarsButton.setBorderPainted(false); // Quita el borde
            fiveStarsButton.setFocusPainted(false); // Quita el borde de enfoque al hacer clic
        }catch(Exception e){
            fiveStarsButton.setText("No se ha encontrado la imagen.");
        }
        fiveStarsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveStarsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(iconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(infoLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                                .addComponent(infoLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(oneStarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(twoStarsButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(threeStarsButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fourStarsButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fiveStarsButton)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(comentarioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(425, 425, 425)
                        .addComponent(confirmButton))
                    .addComponent(comentarioScrollPane))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(infoLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(infoLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(twoStarsButton)
                            .addComponent(oneStarButton)
                            .addComponent(threeStarsButton)
                            .addComponent(fourStarsButton)
                            .addComponent(fiveStarsButton)))
                    .addComponent(iconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comentarioLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comentarioScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirmButton)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(this, 
            "¿Está seguro de enviar la reseña?.", 
            "Advertencia", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.WARNING_MESSAGE);
         if (respuesta == JOptionPane.YES_OPTION) {
             String comentario = comentarioTextArea.getText();
             int resReseña = DBMediator.insertarReview(usuarioID, productoID, calificacion, comentario);
             switch(resReseña){
                 case 1 -> {
                    JOptionPane.showMessageDialog(this,
                            "Se ha ingresado la review exitosamente.",
                            "Notificación",
                            JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                 }case -1 ->{
                    JOptionPane.showMessageDialog(this,
                            "Verifique haber seleccionado un valor para la reseña.",
                            "Notificación",
                            JOptionPane.WARNING_MESSAGE);                     
                 }default ->{
                    JOptionPane.showMessageDialog(this,
                            "Ha ocurrido un error al intentar guardar la reseña, intente de nuevo más tarde.",
                            "Notificación",
                            JOptionPane.ERROR_MESSAGE);                         
                 }                       
             } 
         }
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void oneStarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneStarButtonActionPerformed
        calificacion = 1;
        oneStarButton.setIcon(fullStar);
        twoStarsButton.setIcon(emptyStar);
        threeStarsButton.setIcon(emptyStar);
        fourStarsButton.setIcon(emptyStar);
        fiveStarsButton.setIcon(emptyStar);
    }//GEN-LAST:event_oneStarButtonActionPerformed

    private void twoStarsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoStarsButtonActionPerformed
        calificacion = 2;
        oneStarButton.setIcon(fullStar);
        twoStarsButton.setIcon(fullStar);
        threeStarsButton.setIcon(emptyStar);
        fourStarsButton.setIcon(emptyStar);
        fiveStarsButton.setIcon(emptyStar);
    }//GEN-LAST:event_twoStarsButtonActionPerformed

    private void threeStarsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeStarsButtonActionPerformed
        calificacion = 3;
        oneStarButton.setIcon(fullStar);
        twoStarsButton.setIcon(fullStar);
        threeStarsButton.setIcon(fullStar);
        fourStarsButton.setIcon(emptyStar);
        fiveStarsButton.setIcon(emptyStar);
    }//GEN-LAST:event_threeStarsButtonActionPerformed

    private void fourStarsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourStarsButtonActionPerformed
        calificacion = 4;
        oneStarButton.setIcon(fullStar);
        twoStarsButton.setIcon(fullStar);
        threeStarsButton.setIcon(fullStar);
        fourStarsButton.setIcon(fullStar);
        fiveStarsButton.setIcon(emptyStar);
    }//GEN-LAST:event_fourStarsButtonActionPerformed

    private void fiveStarsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveStarsButtonActionPerformed
        calificacion = 5;
        oneStarButton.setIcon(fullStar);
        twoStarsButton.setIcon(fullStar);
        threeStarsButton.setIcon(fullStar);
        fourStarsButton.setIcon(fullStar);
        fiveStarsButton.setIcon(fullStar);
    }//GEN-LAST:event_fiveStarsButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductoReview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductoReview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductoReview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductoReview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ProductoReview dialog = new ProductoReview(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void llenarAtributos(List<Object> productoInfo){
        productoNombre = (String) productoInfo.get(0);
        productoDescripcion = (String) productoInfo.get(1);
        precio = (Float) productoInfo.get(2);
        stock = (Float) productoInfo.get(3);
        categoria = (String) productoInfo.get(4);
        marca = (String) productoInfo.get(5);
        calificacionPromedio = (Float) productoInfo.get(6);
        img = (String) productoInfo.get(7);
        reviews = (Integer) productoInfo.get(8);
    }
  
private void actualizarLabels() {
    String infoLabelText1 = "<html>"
            + "<b>Nombre:</b> " + productoNombre + "<br>"
            + "<b>Precio Unitario:</b> £" + precio + "<br>";
    
    String infoLabelText2 = "<html>"
            + "<b>Descripción:</b> " + productoDescripcion + "<br>"
            + "<b>Marca:</b> " + marca + "<br>"
            + "<b>Categoría:</b> " + categoria
            + "</html>";
        
    if (reviews > 0) {
        infoLabelText1 += "<b>Calificación Promedio:</b> " + calificacionPromedio + " ✩<br>";
    }
    infoLabelText1 += "</html>";  // Cerrar la etiqueta HTML solo al final
    
    infoLabel1.setText(infoLabelText1);
    infoLabel2.setText(infoLabelText2);
}

private void inicializarReviews(){
    int xInicial = 240; // Coordenada X inicial
    int yInicial = 120; // Coordenada Y inicial
    int anchoEstrella = 36; // Ancho de la estrella
    int espacioEntreEstrellas = 10; // Espacio entre estrellas

    oneStarButton.setBounds(xInicial, yInicial, anchoEstrella, anchoEstrella);
    twoStarsButton.setBounds(xInicial + anchoEstrella + espacioEntreEstrellas, yInicial, anchoEstrella, anchoEstrella);
    threeStarsButton.setBounds(twoStarsButton.getX() + anchoEstrella + espacioEntreEstrellas, yInicial, anchoEstrella, anchoEstrella);
    fourStarsButton.setBounds(threeStarsButton.getX() + anchoEstrella + espacioEntreEstrellas, yInicial, anchoEstrella, anchoEstrella);
    fiveStarsButton.setBounds(fourStarsButton.getX() + anchoEstrella + espacioEntreEstrellas, yInicial, anchoEstrella, anchoEstrella);

    // Agregar los botones al panel si es necesario
    this.add(oneStarButton);
    this.add(twoStarsButton);
    this.add(threeStarsButton);
    this.add(fourStarsButton);
    this.add(fiveStarsButton);

    this.revalidate();
    this.repaint();
}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel comentarioLabel;
    private javax.swing.JScrollPane comentarioScrollPane;
    private javax.swing.JTextArea comentarioTextArea;
    private javax.swing.JButton confirmButton;
    private javax.swing.JButton fiveStarsButton;
    private javax.swing.JButton fourStarsButton;
    private javax.swing.JLabel iconLabel;
    private javax.swing.JLabel infoLabel1;
    private javax.swing.JLabel infoLabel2;
    private javax.swing.JButton oneStarButton;
    private javax.swing.JButton threeStarsButton;
    private javax.swing.JButton twoStarsButton;
    // End of variables declaration//GEN-END:variables
}
