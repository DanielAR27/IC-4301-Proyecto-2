package proyecto.comercioapp;

import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import proyecto.db.DBMediator;
import proyecto.utils.CheckUtils;

public class RegisterView extends javax.swing.JFrame {
    private SimpleDateFormat formatoFecha;
    /**
     * Creates new form LoginView
     */
    public RegisterView() {
        initComponents();
        this.formatoFecha =  new SimpleDateFormat("yyyy-MM-dd");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RegisterPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        lastNameTextField = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        acceptButton = new javax.swing.JButton();
        phoneLabel = new javax.swing.JLabel();
        phoneTextField = new javax.swing.JTextField();
        birthdateLabel = new javax.swing.JLabel();
        birthDateChooser = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registro");
        setResizable(false);

        RegisterPanel.setBackground(new java.awt.Color(153, 204, 255));

        nameLabel.setBackground(new java.awt.Color(0, 0, 0));
        nameLabel.setForeground(new java.awt.Color(0, 0, 0));
        nameLabel.setText("Nombre:");

        nameTextField.setBackground(new java.awt.Color(255, 255, 255));
        nameTextField.setForeground(new java.awt.Color(0, 0, 0));

        lastNameLabel.setBackground(new java.awt.Color(0, 0, 0));
        lastNameLabel.setForeground(new java.awt.Color(0, 0, 0));
        lastNameLabel.setText("Apellido:");

        lastNameTextField.setBackground(new java.awt.Color(255, 255, 255));
        lastNameTextField.setForeground(new java.awt.Color(0, 0, 0));

        emailLabel.setBackground(new java.awt.Color(0, 0, 0));
        emailLabel.setForeground(new java.awt.Color(0, 0, 0));
        emailLabel.setText("Correo:");

        passwordLabel.setBackground(new java.awt.Color(0, 0, 0));
        passwordLabel.setForeground(new java.awt.Color(0, 0, 0));
        passwordLabel.setText("Contraseña:");

        emailTextField.setBackground(new java.awt.Color(255, 255, 255));
        emailTextField.setForeground(new java.awt.Color(0, 0, 0));

        passwordField.setBackground(new java.awt.Color(255, 255, 255));
        passwordField.setForeground(new java.awt.Color(0, 0, 0));

        acceptButton.setText("Registrarse");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        phoneLabel.setBackground(new java.awt.Color(0, 0, 0));
        phoneLabel.setForeground(new java.awt.Color(0, 0, 0));
        phoneLabel.setText("Telefono:");

        phoneTextField.setBackground(new java.awt.Color(255, 255, 255));
        phoneTextField.setForeground(new java.awt.Color(0, 0, 0));

        birthdateLabel.setBackground(new java.awt.Color(0, 0, 0));
        birthdateLabel.setForeground(new java.awt.Color(0, 0, 0));
        birthdateLabel.setText("Fecha de Nacimiento:");

        birthDateChooser.setBackground(new java.awt.Color(255, 255, 255));
        // Establecer la fecha máxima seleccionable a hoy
        birthDateChooser.setMaxSelectableDate(new Date());

        javax.swing.GroupLayout RegisterPanelLayout = new javax.swing.GroupLayout(RegisterPanel);
        RegisterPanel.setLayout(RegisterPanelLayout);
        RegisterPanelLayout.setHorizontalGroup(
            RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegisterPanelLayout.createSequentialGroup()
                .addContainerGap(198, Short.MAX_VALUE)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RegisterPanelLayout.createSequentialGroup()
                        .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lastNameTextField)
                            .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(RegisterPanelLayout.createSequentialGroup()
                        .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(phoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(emailTextField)
                            .addComponent(passwordField)
                            .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(RegisterPanelLayout.createSequentialGroup()
                        .addComponent(birthdateLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(birthDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(181, 181, 181))
            .addGroup(RegisterPanelLayout.createSequentialGroup()
                .addGap(283, 283, 283)
                .addComponent(acceptButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        RegisterPanelLayout.setVerticalGroup(
            RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterPanelLayout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLabel)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneLabel)
                    .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(birthdateLabel)
                    .addComponent(birthDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(acceptButton)
                .addContainerGap(125, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(RegisterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(RegisterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
    try{
        // Obtener los valores de los campos de entrada (suponiendo que tienes JTextFields)
        String email = emailTextField.getText(); 
        String phoneNumber = phoneTextField.getText(); 
        String password = new String (passwordField.getPassword());
        String fechaCumple = formatoFecha.format(birthDateChooser.getDate());

        // Verificar si el email es válido
        if (!CheckUtils.isValidEmail(email)) {
            JOptionPane.showMessageDialog(this, "Verifique que el correo sea válido.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return; // Detener la ejecución si el email es inválido
        }

        // Verificar si el número de teléfono es válido
        if (!CheckUtils.isValidPhoneNumber(phoneNumber)) {
            JOptionPane.showMessageDialog(this, "Verifique que el número de teléfono sea válido.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return; // Detener la ejecución si el número de teléfono es inválido
        }
            
        // Verificar si la contraseña es válida
        if(!CheckUtils.isPasswordValid(password)){
            JOptionPane.showMessageDialog(this, "Verifique que la contraseña tenga más de 5 caracteres.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return; // Detener la ejecución si la contraseña es inválida
        }else{
            password = CheckUtils.hashPassword(password); //Encriptar la contraseña.
        }
        

        int res = DBMediator.insertUsuario(nameTextField.getText(),
                                                            lastNameTextField.getText(), email, password, phoneNumber, fechaCumple);

        switch (res) {
            case 0 -> {
                JOptionPane.showMessageDialog(this, "Se ha registrado exitosamente el usuario.", "Notificación", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
                LoginView login = new LoginView();
                login.setVisible(true);
            }
            case -1 -> {
                JOptionPane.showMessageDialog(this, "Verifique no dejar espacios en blanco.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }
            default -> {
                JOptionPane.showMessageDialog(this, "El correo ingresado ya se encuentra asociado a un usuario.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }   
    }catch (NullPointerException npe){
            JOptionPane.showMessageDialog(this, "Verifique haber ingresado una fecha antes de continuar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return; // Detener la ejecución si la contraseña es inválida
    }catch (Exception e){
           JOptionPane.showMessageDialog(this, "Se ha producido un error, intente de nuevo por favor.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            return; // Detener la ejecución si la contraseña es inválida
    }
    
    
    }//GEN-LAST:event_acceptButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel RegisterPanel;
    private javax.swing.JButton acceptButton;
    private com.toedter.calendar.JDateChooser birthDateChooser;
    private javax.swing.JLabel birthdateLabel;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JTextField phoneTextField;
    // End of variables declaration//GEN-END:variables
}
