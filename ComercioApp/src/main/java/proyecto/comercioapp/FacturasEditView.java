package proyecto.comercioapp;

import java.awt.Color;
import java.net.URL;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import proyecto.db.DBMediator;

public class FacturasEditView extends javax.swing.JFrame {

    private int usuarioID;
    private int pagina;
    private Map<Integer, JPanel> panelesFacturas;
    private List<List<Object>> facturasPagina;
    
    public FacturasEditView() {
        initComponents();
    }

    public FacturasEditView(int usuarioID){
        initComponents();
        this.setLayout(null);
        facturasPanel.setLayout((null));
        this.panelesFacturas = new TreeMap<>();
        this.usuarioID = usuarioID;
        this.pagina = 0;
        crearPanelesFacturas();
        actualizarPanelesFacturas(pagina);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        facturasPanel = new javax.swing.JPanel();
        siguienteButton = new javax.swing.JButton();
        anteriorButton = new javax.swing.JButton();
        homeIcon = new javax.swing.JButton();
        facturasLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menú de Edición de Facturas");

        facturasPanel.setBackground(new java.awt.Color(255, 255, 255));

        siguienteButton.setText("Siguiente Página");
        siguienteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguienteButtonActionPerformed(evt);
            }
        });

        anteriorButton.setText("Página Anterior");
        anteriorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorButtonActionPerformed(evt);
            }
        });

        try {
            URL urlHome = new URL("https://i.ibb.co/LvrDQZx/home-img.png");
            ImageIcon home = new ImageIcon(urlHome);
            homeIcon.setIcon(home);

            // Agregar texto debajo del ícono y usar HTML para formatearlo en negrita
            homeIcon.setText("<html><center><b>Regresar</b></center></html>");

            // Configurar la posición del texto y el ícono
            homeIcon.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            homeIcon.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

            // Hacer el fondo transparente y quitar el borde
            homeIcon.setContentAreaFilled(false); // Hace que el fondo sea transparente
            homeIcon.setBorderPainted(false); // Quita el borde
            homeIcon.setFocusPainted(false); // Quita el borde de enfoque al hacer clic
        }catch(Exception e){
            homeIcon.setText("No se ha encontrado la imagen.");
        }
        homeIcon.setPreferredSize(new java.awt.Dimension(64, 64));
        // Code adding the component to the parent container - not shown here
        homeIcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeIconActionPerformed(evt);
            }
        });

        facturasLabel.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        facturasLabel.setForeground(new java.awt.Color(0, 0, 0));
        facturasLabel.setText("Menú de Edición de Facturas");

        javax.swing.GroupLayout facturasPanelLayout = new javax.swing.GroupLayout(facturasPanel);
        facturasPanel.setLayout(facturasPanelLayout);
        facturasPanelLayout.setHorizontalGroup(
            facturasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(facturasPanelLayout.createSequentialGroup()
                .addGap(337, 337, 337)
                .addComponent(anteriorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(siguienteButton)
                .addContainerGap(365, Short.MAX_VALUE))
            .addGroup(facturasPanelLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(facturasLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(homeIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        facturasPanelLayout.setVerticalGroup(
            facturasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, facturasPanelLayout.createSequentialGroup()
                .addGroup(facturasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(facturasPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(homeIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(facturasPanelLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(facturasLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 381, Short.MAX_VALUE)
                .addGroup(facturasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anteriorButton)
                    .addComponent(siguienteButton))
                .addGap(76, 76, 76))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(facturasPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(facturasPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void siguienteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguienteButtonActionPerformed
        pagina += 1;
        actualizarPanelesFacturas(pagina);
    }//GEN-LAST:event_siguienteButtonActionPerformed

    private void anteriorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorButtonActionPerformed
        pagina -= 1;
        actualizarPanelesFacturas(pagina);
    }//GEN-LAST:event_anteriorButtonActionPerformed

    private void homeIconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeIconActionPerformed
        this.dispose();
        HomeView home = new HomeView(usuarioID);
        home.setVisible(true);
    }//GEN-LAST:event_homeIconActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FacturasEditView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FacturasEditView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FacturasEditView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FacturasEditView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FacturasEditView().setVisible(true);
            }
        });
    }

    private void crearPanelesFacturas() {
        int anchoPanel = 800;
        int altoPanel = 55;
        int espacioEntrePaneles = 10;
        int xInicial = (facturasPanel.getWidth() - anchoPanel) / 2;
        int yInicial = 120;

        for (int i = 0; i < 5; i++) {
            JPanel facturaPanel = new JPanel();
            facturaPanel.setLayout(null);
            facturaPanel.setBounds(xInicial, yInicial, anchoPanel, altoPanel);
            facturaPanel.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
            facturaPanel.setBackground(new Color(245, 245, 245));

            JLabel facturaLabel = new JLabel("Factura " + (i + 1));
            facturaLabel.setBounds(10, 10, 600, 20);
            facturaPanel.add(facturaLabel);

            JButton editarButton = new JButton("Editar");
            editarButton.setBounds(anchoPanel - 150, 10, 90, 30);
            facturaPanel.add(editarButton);

            JButton eliminarButton = new JButton("-");
            eliminarButton.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
            eliminarButton.setBounds(anchoPanel - 50, 10, 40, 30);
            eliminarButton.setBackground(Color.RED);
            eliminarButton.setForeground(Color.WHITE);
            facturaPanel.add(eliminarButton);

            // Acción para mostrar el diálogo al hacer clic en "Editar"
            int panelIndex = i;
            editarButton.addActionListener(e -> mostrarOpcionesEdicion(panelIndex));

            eliminarButton.addActionListener(e -> eliminarFactura(panelIndex));

            facturasPanel.add(facturaPanel);
            panelesFacturas.put(i, facturaPanel);

            yInicial += altoPanel + espacioEntrePaneles;
        }

        facturasPanel.revalidate();
        facturasPanel.repaint();
    }


    public final void resetearPagina(){
        pagina = 0;
    }
    
    public void actualizarPanelesFacturas(int numPagina) {
        int index = 0;
        facturasPagina = DBMediator.getAllFacturasPorPagina(numPagina);
        int stillFacturas = DBMediator.verificarAllFacturasPorPagina(numPagina + 1);

        // Limpia todos los paneles antes de actualizarlos
        for (JPanel panel : panelesFacturas.values()) {
            panel.setVisible(false); // Ocultar todos los paneles inicialmente
            JLabel facturaLabel = (JLabel) panel.getComponent(0);
            facturaLabel.setText(""); // Limpiar texto anterior
        }
        
        // Si no hay facturas en la página
        if (facturasPagina == null || facturasPagina.isEmpty()) {
            JPanel panelSinFacturas = panelesFacturas.get(0); // Usar el primer panel disponible

            if (panelSinFacturas != null) {
                // Limpia el panel y agrega el mensaje
                panelSinFacturas.removeAll(); // Eliminar componentes previos

                JLabel mensajeLabel = new JLabel("No hay facturas disponibles.");
                mensajeLabel.setBounds(10, 10, panelSinFacturas.getWidth() - 20, panelSinFacturas.getHeight() - 20);
                mensajeLabel.setHorizontalAlignment(JLabel.CENTER);
                mensajeLabel.setVerticalAlignment(JLabel.CENTER);
                mensajeLabel.setFont(mensajeLabel.getFont().deriveFont(18f).deriveFont(java.awt.Font.BOLD)); // Tamaño grande y negrita
                panelSinFacturas.add(mensajeLabel);

                panelSinFacturas.setVisible(true); // Mostrar el panel
            }

            siguienteButton.setVisible(false);
            anteriorButton.setVisible(false); // Deshabilitar botones
            return;
        }

        // Si hay facturas, actualizarlas en los paneles
        for (List<Object> factura : facturasPagina) {
            JPanel facturaPanel = panelesFacturas.get(index);

            if (facturaPanel != null) {
                int facturaID = (Integer) factura.get(0);
                String fecha = factura.get(1).toString();
                float total = (Float) factura.get(2);
                float costoEnvio = (Float) factura.get(3);
                String estado = factura.get(4).toString();

                String textoFactura = String.format(
                    "Factura ID: %d | Fecha: %s | Total: £%.2f | Costo de Envío: £%.2f | Estado: %s",
                    facturaID, fecha, total, costoEnvio, estado
                );

                JLabel facturaLabel = (JLabel) facturaPanel.getComponent(0);
                facturaLabel.setText(textoFactura);

                facturaPanel.setVisible(true);
                index++;
            }
        }

        // Ocultar paneles no usados
        for (int i = index; i < panelesFacturas.size(); i++) {
            JPanel facturaPanel = panelesFacturas.get(i);
            if (facturaPanel != null) {
                facturaPanel.setVisible(false); // Ocultar panel no utilizado
            }
        }

        anteriorButton.setVisible(pagina > 0);
        siguienteButton.setVisible(stillFacturas == 1);
    }
    
    private void mostrarOpcionesEdicion(int panelIndex) {
        try {
            // Validar que el índice sea válido
            if (panelIndex < facturasPagina.size()) {
                // Obtener los datos de la factura desde facturasPagina
                List<Object> factura = facturasPagina.get(panelIndex);
                int facturaID = (Integer) factura.get(0); // Obtener el ID de la factura

                // Crear un JDialog
                JDialog dialog = new JDialog(this, "Escoja una opción", true); // Modal
                dialog.setSize(300, 200); // Tamaño del diálogo
                dialog.setLayout(null); // Diseño absoluto
                dialog.setLocationRelativeTo(this); // Centrar en la ventana principal
                dialog.setResizable(false); // No permitir redimensionar

                // Label centrado con el texto "¿Qué desea cambiar?" en negrita
                JLabel tituloLabel = new JLabel("¿Qué desea cambiar?", SwingConstants.CENTER);
                tituloLabel.setBounds(50, 10, 200, 30);
                tituloLabel.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 14)); // Negrita
                dialog.add(tituloLabel);

                // Botón para editar líneas de factura
                JButton editarLineasButton = new JButton("Líneas de Factura");
                editarLineasButton.setBounds(50, 50, 200, 40); // Posicionado un poco más arriba
                editarLineasButton.addActionListener(e -> {
                    dialog.dispose(); // Cerrar el diálogo
                    this.dispose();
                    FacturaEditInfo fei = new FacturaEditInfo(usuarioID, facturaID);
                    fei.setVisible(true);
                    
                });

                // Botón para editar información de factura
                JButton editarInformacionButton = new JButton("Información de Factura");
                editarInformacionButton.setBounds(50, 100, 200, 40); // Posicionado un poco más arriba
                editarInformacionButton.addActionListener(e -> {
                    dialog.dispose(); // Cerrar el diálogo
                    EditFactura ef = new EditFactura(this, true, facturaID);
                    ef.setVisible(true);
                });

                // Agregar botones y label al diálogo
                dialog.add(editarLineasButton);
                dialog.add(editarInformacionButton);

                // Mostrar el diálogo
                dialog.setVisible(true);
            } else {
                throw new IndexOutOfBoundsException("Índice fuera de rango.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Ha ocurrido un error al intentar editar la factura, intente de nuevo más tarde.",
                    "Advertencia",
                    JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void eliminarFactura(int panelIndex){
        try{
            // Validar que el índice sea válido
            if (panelIndex < facturasPagina.size()) {
                // Obtener los datos de la factura desde facturasPagina
                List<Object> factura = facturasPagina.get(panelIndex);
                int facturaID = (Integer) factura.get(0); // Obtener el ID de la factura

                int respuesta = JOptionPane.showConfirmDialog(
                   this,
                   "¿Está seguro de eliminar la factura con ID \"" + facturaID + "\"?\nEsta acción es irreversible.",
                   "Confirmar eliminación",
                   JOptionPane.YES_NO_OPTION,
                   JOptionPane.WARNING_MESSAGE
               );
                
                if(respuesta == JOptionPane.YES_OPTION){
                    int resultado = DBMediator.deleteFactura(facturaID);
                    switch (resultado) {
                        case 0 ->{
                            JOptionPane.showMessageDialog(this, "Factura eliminada con éxito.", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
                            this.pagina = 0;
                            actualizarPanelesFacturas(0);
                        }default ->{
                            JOptionPane.showMessageDialog(this, "Error al eliminar la factura.", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }                    
                }
                
            } else {
                throw new IndexOutOfBoundsException("Índice fuera de rango.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Ha ocurrido un error al intentar editar la factura, intente de nuevo más tarde.",
                    "Advertencia",
                    JOptionPane.ERROR_MESSAGE);
        }     
    }



    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anteriorButton;
    private javax.swing.JLabel facturasLabel;
    private javax.swing.JPanel facturasPanel;
    private javax.swing.JButton homeIcon;
    private javax.swing.JButton siguienteButton;
    // End of variables declaration//GEN-END:variables
}
