package proyecto.comercioapp;

import java.awt.Frame;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import proyecto.db.DBMediator;

public class ProductosView extends javax.swing.JFrame {

    private Map<Integer, List<Object>> productoIDs;
    private int usuarioID;
    
    public ProductosView() {
        productoIDs = new TreeMap<>();
        initComponents();
    }
    
    public ProductosView(int usuarioID){
        this.usuarioID = usuarioID;
        productoIDs = new TreeMap<>();
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        productsScrollPane = new javax.swing.JScrollPane();
        productsList = new javax.swing.JList<>();
        agregarButton = new javax.swing.JButton();
        editarButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        volverButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión de Productos");
        setResizable(false);

        // Configura el modo de selección para permitir solo una fila seleccionada
        productsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        // Resetear productos
        productoIDs = new TreeMap<>();
        // Crear el modelo para la JList
        actualizarLista();
        productsScrollPane.setViewportView(productsList);

        agregarButton.setText("Agregar");
        agregarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarButtonActionPerformed(evt);
            }
        });

        editarButton.setText("Editar");
        editarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarButtonActionPerformed(evt);
            }
        });

        eliminarButton.setText("Eliminar");
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarButtonActionPerformed(evt);
            }
        });

        volverButton.setText("Volver");
        volverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(productsScrollPane)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addComponent(agregarButton)
                .addGap(18, 18, 18)
                .addComponent(editarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(eliminarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(volverButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(productsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregarButton)
                    .addComponent(editarButton)
                    .addComponent(eliminarButton)
                    .addComponent(volverButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private Integer getProductoID(int index) {
        if (index < 0 || index >= productoIDs.size()) {
            return -1; // Índice fuera de rango, devolver -1
        }
        return (Integer) productoIDs.get(index).get(0); // Devuelve el ID correspondiente
    }
    
    private String getProductoNombre(int index){
        if (index < 0 || index >= productoIDs.size()) {
            return ""; // Índice fuera de rango, devolver -1
        }
        return (String) productoIDs.get(index).get(1); // Devuelve el código del país  
    }
    
    
 
    private void editarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonActionPerformed
        int selectedIndex =  productsList.getSelectedIndex(); // Índice seleccionado
        if (selectedIndex != -1) {
            Integer productoID = getProductoID(selectedIndex); // Obtener ID del usuario seleccionado
            AddProducto ap = new AddProducto(this, true, productoID);
            ap.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this, "Debe seleccionar un producto para editar.", "Advertencia", JOptionPane.WARNING_MESSAGE);            
        }
    }//GEN-LAST:event_editarButtonActionPerformed

    private void agregarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarButtonActionPerformed
            AddProducto ap = new AddProducto(this, true, null);
            ap.setVisible(true);       
    }//GEN-LAST:event_agregarButtonActionPerformed

    private void eliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarButtonActionPerformed
        int selectedIndex =  productsList.getSelectedIndex(); // Índice seleccionado
        if (selectedIndex != -1) {        
            String productoNombre = getProductoNombre(selectedIndex);
            int respuesta = JOptionPane.showConfirmDialog(
                this,
                "¿Está seguro de eliminar el producto \"" + productoNombre + "\"?\nEsta acción es irreversible.",
                "Confirmar eliminación",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE
            );

            if (respuesta == JOptionPane.YES_OPTION) {
                Integer productoID = getProductoID(selectedIndex); // Obtener ID del usuario seleccionado
                int resultado = DBMediator.eliminarProducto(productoID);
                switch (resultado) {
                    case 0 ->{
                        JOptionPane.showMessageDialog(this, "Producto eliminado con éxito.", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
                        actualizarLista();
                    }case -1 ->{
                        JOptionPane.showMessageDialog(this, "El producto está asociado a una factura, intente con otro.", "Error", JOptionPane.ERROR_MESSAGE);
                    }default ->{
                        JOptionPane.showMessageDialog(this, "Error al eliminar el producto.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Debe seleccionar un producto para editar.", "Advertencia", JOptionPane.WARNING_MESSAGE);            
        }
    }//GEN-LAST:event_eliminarButtonActionPerformed

    private void volverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverButtonActionPerformed
        this.dispose(); // Cierra la ventana actual
        HomeView home = new HomeView(usuarioID);
        home.setVisible(true);
    }//GEN-LAST:event_volverButtonActionPerformed

    
   public final void actualizarLista(){
       // Resetear productos.
       productoIDs = new TreeMap<>();
        // Crear el modelo para la JList
        DefaultListModel<String> listModel = new DefaultListModel<>();

        // Obtener datos de la base de datos
        List<List<Object>> productos = DBMediator.getProductosConID();

        int index = 0;

        for (List<Object> producto : productos) {
            int id = (int) producto.get(0); // ProductoID
            String nombre = (String) producto.get(1); // Nombre
            String categoria = (String) producto.get(2); // Categoria
            String marca = (String) producto.get(3); // Marca
            Integer stock = (Integer) producto.get(4); // Stock
            String productoStr = nombre + " (Marca: " + marca + ", Categoría: " + categoria + ", Stock: " + stock + ")";
            listModel.addElement(productoStr);
            productoIDs.put(index++, producto);
        }
        productsList.setModel(listModel);       
   }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ProductosView dialog = new ProductosView();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarButton;
    private javax.swing.JButton editarButton;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JList<String> productsList;
    private javax.swing.JScrollPane productsScrollPane;
    private javax.swing.JButton volverButton;
    // End of variables declaration//GEN-END:variables
}
