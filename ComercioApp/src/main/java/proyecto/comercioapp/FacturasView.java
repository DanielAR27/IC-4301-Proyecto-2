package proyecto.comercioapp;

import java.awt.Color;
import java.net.URL;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import proyecto.db.DBMediator;

public class FacturasView extends javax.swing.JFrame {

    private int usuarioID;
    private int pagina;
    private Map<Integer, JPanel> panelesFacturas;
    private List<List<Object>> facturasPagina;
    
    public FacturasView() {
        initComponents();
    }
    
    public FacturasView(int usuarioID){
        initComponents();
        this.setLayout(null);
        facturasPanel.setLayout((null));
        this.panelesFacturas = new TreeMap<>();
        this.usuarioID = usuarioID;
        this.pagina = 0;
        crearPanelesFacturas();
        actualizarPanelesFacturas(usuarioID, pagina);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        facturasPanel = new javax.swing.JPanel();
        siguienteButton = new javax.swing.JButton();
        anteriorButton = new javax.swing.JButton();
        homeIcon = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        facturasPanel.setBackground(new java.awt.Color(255, 255, 255));

        siguienteButton.setText("Siguiente Página");
        siguienteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguienteButtonActionPerformed(evt);
            }
        });

        anteriorButton.setText("Página Anterior");
        anteriorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorButtonActionPerformed(evt);
            }
        });

        try {
            URL urlHome = new URL("https://i.ibb.co/LvrDQZx/home-img.png");
            ImageIcon home = new ImageIcon(urlHome);
            homeIcon.setIcon(home);

            // Agregar texto debajo del ícono y usar HTML para formatearlo en negrita
            homeIcon.setText("<html><center><b>Regresar</b></center></html>");

            // Configurar la posición del texto y el ícono
            homeIcon.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            homeIcon.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

            // Hacer el fondo transparente y quitar el borde
            homeIcon.setContentAreaFilled(false); // Hace que el fondo sea transparente
            homeIcon.setBorderPainted(false); // Quita el borde
            homeIcon.setFocusPainted(false); // Quita el borde de enfoque al hacer clic
        }catch(Exception e){
            homeIcon.setText("No se ha encontrado la imagen.");
        }
        homeIcon.setPreferredSize(new java.awt.Dimension(64, 64));
        // Code adding the component to the parent container - not shown here
        homeIcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeIconActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout facturasPanelLayout = new javax.swing.GroupLayout(facturasPanel);
        facturasPanel.setLayout(facturasPanelLayout);
        facturasPanelLayout.setHorizontalGroup(
            facturasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(facturasPanelLayout.createSequentialGroup()
                .addGap(337, 337, 337)
                .addComponent(anteriorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(siguienteButton)
                .addContainerGap(365, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, facturasPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(homeIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        facturasPanelLayout.setVerticalGroup(
            facturasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, facturasPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(homeIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 390, Short.MAX_VALUE)
                .addGroup(facturasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anteriorButton)
                    .addComponent(siguienteButton))
                .addGap(76, 76, 76))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(facturasPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(facturasPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeIconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeIconActionPerformed
        this.dispose();
        HomeView home = new HomeView(usuarioID);
        home.setVisible(true);
    }//GEN-LAST:event_homeIconActionPerformed

    private void siguienteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguienteButtonActionPerformed
        pagina += 1;
        actualizarPanelesFacturas(usuarioID, pagina);
    }//GEN-LAST:event_siguienteButtonActionPerformed

    private void anteriorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorButtonActionPerformed
        pagina -= 1;
        actualizarPanelesFacturas(usuarioID, pagina);
    }//GEN-LAST:event_anteriorButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FacturasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FacturasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FacturasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FacturasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FacturasView().setVisible(true);
            }
        });
    }

    private void crearPanelesFacturas() {
        int anchoPanel = 800;
        int altoPanel = 55;
        int espacioEntrePaneles = 10;
        int xInicial = (facturasPanel.getWidth() - anchoPanel) / 2;
        int yInicial = 90;

        for (int i = 0; i < 5; i++) {
            JPanel facturaPanel = new JPanel();
            facturaPanel.setLayout(null);
            facturaPanel.setBounds(xInicial, yInicial, anchoPanel, altoPanel);
            facturaPanel.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
            facturaPanel.setBackground(new Color(245, 245, 245));

            JLabel facturaLabel = new JLabel("Factura " + (i + 1));
            facturaLabel.setBounds(10, 10, 600, 20);
            facturaPanel.add(facturaLabel);

            JButton visualizarButton = new JButton("Visualizar");
            visualizarButton.setBounds(anchoPanel - 100, 10, 90, 30);
            facturaPanel.add(visualizarButton);
            
            // Agregar acción al botón de eliminar
            int panelIndex = i; // Capturar el índice para usarlo en el listener
            visualizarButton.addActionListener(e -> {
                consultarFactura(panelIndex);
            });

            facturaPanel.add(visualizarButton);            
            
            facturasPanel.add(facturaPanel);
            panelesFacturas.put(i, facturaPanel);

            yInicial += altoPanel + espacioEntrePaneles;
        }

        facturasPanel.revalidate();
        facturasPanel.repaint();
    }
    
    private void actualizarPanelesFacturas(int usuarioID, int numPagina) {
        int index = 0;
        facturasPagina = DBMediator.getFacturasPorPagina(usuarioID, numPagina);
        int stillFacturas = DBMediator.verificarFacturasPorPagina(usuarioID, numPagina + 1);

        if (numPagina == 0 && facturasPagina.isEmpty()) {
            JPanel panelSinFacturas = new JPanel();
            panelSinFacturas.setLayout(null);
            panelSinFacturas.setBounds(panelesFacturas.get(0).getBounds());
            panelSinFacturas.setBackground(new Color(245, 245, 245));
            panelSinFacturas.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            JLabel mensajeLabel = new JLabel("No hay facturas disponibles.");
            mensajeLabel.setBounds(10, 10, 500, 20);
            panelSinFacturas.add(mensajeLabel);

            facturasPanel.add(panelSinFacturas);
            panelSinFacturas.setVisible(true);

            siguienteButton.setVisible(false);
        } else {
            for (List<Object> factura : facturasPagina) {
                JPanel facturaPanel = panelesFacturas.get(index);

                if (facturaPanel != null) {
                    int facturaID = (Integer) factura.get(0);
                    String fecha = factura.get(1).toString();
                    float total = (Float) factura.get(2);
                    float costoEnvio = (Float) factura.get(3);

                    String textoFactura = String.format(
                        "Factura ID: %d | Fecha: %s | Total: £%.2f | Costo de Envío: £%.2f",
                        facturaID, fecha, total, costoEnvio
                    );

                    JLabel facturaLabel = (JLabel) facturaPanel.getComponent(0);
                    facturaLabel.setText(textoFactura);

                    facturaPanel.setVisible(true);
                    index++;
                }
            }

            for (int i = index; i < panelesFacturas.size(); i++) {
                JPanel facturaPanel = panelesFacturas.get(i);
                if (facturaPanel != null) {
                    facturaPanel.setVisible(false);
                }
            }
        }

        anteriorButton.setVisible(pagina > 0);
        siguienteButton.setVisible(stillFacturas == 1);
    }

    private void consultarFactura(int panelIndex){
        try{
            if (panelIndex < facturasPagina.size()) {
                    List<Object> factura = facturasPagina.get(panelIndex);
                    int facturaID = (Integer) factura.get(0);
                    this.dispose();
                    FacturaInfo fi = new FacturaInfo(usuarioID, facturaID);
                    fi.setVisible(true);
            }
        }catch (Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this,
                    "Ha ocurrido un error al intentar borrar el producto, intente de nuevo más tarde.",
                    "Advertencia",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anteriorButton;
    private javax.swing.JPanel facturasPanel;
    private javax.swing.JButton homeIcon;
    private javax.swing.JButton siguienteButton;
    // End of variables declaration//GEN-END:variables
}
